@{
    ViewData["Title"] = "Sistema de Gestión Contable";
}

<div class="container mt-4 d-flex flex-column align-items-center text-center">
    <!--  Encabezado centrado -->
    <h1 class="empresa-nombre">Sistema de Gestion Contable Servicio de Fotocopiado Yugen</h1>

    <!-- Ícono de Notificaciones -->
    <div class="mt-3 position-relative">
        <button id="btnNotificaciones" class="btn btn-light position-relative">
            <i class="fa fa-bell fa-2x" id="notificacionesIcon" style="cursor: pointer;"></i>
            <!-- Contador de Notificaciones (Se muestra solo si hay notificaciones) -->
            <span id="notificacionesCount" class="badge bg-danger position-absolute" style="
            top: 0px;
            right: 0px;
            font-size: 12px;
            display: none;">
                0
            </span>
        </button>

        <!-- Dropdown de Notificaciones -->
        <div id="notificacionesDropdown" class="dropdown-menu p-2 shadow" style="
        display: none;
        position: absolute;
        top: 45px;
        right: 0;
        width: 300px;">
            <ul id="listaNotificaciones" class="list-group"></ul>
        </div>
    </div>


    <!-- Contenido del Dashboard -->
    <h2 class="bienvenido mt-3">Bienvenido, <strong>@ViewBag.Usuario</strong></h2>
    <p class="instrucciones">Seleccione una opción del menú lateral para comenzar.</p>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const iconoNotificaciones = document.getElementById("btnNotificaciones");
        const dropdown = document.getElementById("notificacionesDropdown");
        const listaNotificaciones = document.getElementById("listaNotificaciones");
        const notificacionesCount = document.getElementById("notificacionesCount");

        iconoNotificaciones.addEventListener("click", function () {
            // Mostrar/Ocultar Dropdown
            if (dropdown.style.display === "none" || dropdown.style.display === "") {
                dropdown.style.display = "block";
                cargarNotificaciones();
            } else {
                dropdown.style.display = "none";
            }
        });

        function cargarNotificaciones() {
            fetch('/Notificaciones/GetNotificaciones')
                .then(response => response.json())
                .then(data => {
                    listaNotificaciones.innerHTML = "";

                    // Actualizar contador de notificaciones
                    if (data.length > 0) {
                        notificacionesCount.textContent = data.length;
                        notificacionesCount.style.display = "inline-block";
                    } else {
                        notificacionesCount.style.display = "none";
                    }

                    if (data.length === 0) {
                        listaNotificaciones.innerHTML = "<li class='list-group-item text-center'>No hay notificaciones</li>";
                        return;
                    }

                    data.forEach(noti => {
                        let item = document.createElement("li");
                        item.classList.add("list-group-item");
                        item.innerHTML = `<a href="${noti.url}" class="text-dark">${noti.mensaje}</a>`;
                        listaNotificaciones.appendChild(item);
                    });
                })
                .catch(error => console.error("Error cargando notificaciones:", error));
        }

        // Llamar a la función al cargar la página para mostrar el número de notificaciones
        cargarNotificaciones();
    });
</script>
