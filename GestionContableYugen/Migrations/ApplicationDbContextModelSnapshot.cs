// <auto-generated />
using System;
using GestionContableYugen.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestionContableYugen.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ActivoFijo", b =>
                {
                    b.Property<int>("ActivoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActivoID"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaAdquisicion")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreActivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ValorDepreciado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorInicial")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("VidaUtil")
                        .HasColumnType("int");

                    b.HasKey("ActivoID");

                    b.ToTable("ActivosFijos", (string)null);
                });

            modelBuilder.Entity("AsientoContable", b =>
                {
                    b.Property<int>("AsientoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AsientoID"));

                    b.Property<int>("CuentaID")
                        .HasColumnType("int");

                    b.Property<decimal>("Debe")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Haber")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("AsientoID");

                    b.HasIndex("CuentaID");

                    b.ToTable("AsientosContables", (string)null);
                });

            modelBuilder.Entity("Cliente", b =>
                {
                    b.Property<int>("ClienteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClienteID"));

                    b.Property<string>("CorreoElectronico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idDistrito")
                        .HasColumnType("int");

                    b.HasKey("ClienteID");

                    b.HasIndex("idDistrito");

                    b.ToTable("Clientes", (string)null);
                });

            modelBuilder.Entity("GestionContableYugen.Models.CajaChica", b =>
                {
                    b.Property<int>("MovimientoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MovimientoID"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaMovimiento")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("MovimientoID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Caja_Chica", (string)null);
                });

            modelBuilder.Entity("GestionContableYugen.Models.Canton", b =>
                {
                    b.Property<int>("idCanton")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idCanton"));

                    b.Property<string>("NombreCanton")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProvinciaidProvincia")
                        .HasColumnType("int");

                    b.Property<int>("idProvincia")
                        .HasColumnType("int");

                    b.HasKey("idCanton");

                    b.HasIndex("ProvinciaidProvincia");

                    b.ToTable("Cantones", (string)null);
                });

            modelBuilder.Entity("GestionContableYugen.Models.CierreCaja", b =>
                {
                    b.Property<int>("idCierreCaja")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idCierreCaja"));

                    b.Property<int>("CajaChicaMovimientoID")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCierre")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MontoTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("idCaja")
                        .HasColumnType("int");

                    b.HasKey("idCierreCaja");

                    b.HasIndex("CajaChicaMovimientoID");

                    b.ToTable("CierresCaja", (string)null);
                });

            modelBuilder.Entity("GestionContableYugen.Models.ConceptoCajaChica", b =>
                {
                    b.Property<int>("idConcepto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idConcepto"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idConcepto");

                    b.ToTable("ConceptosCajaChica", (string)null);
                });

            modelBuilder.Entity("GestionContableYugen.Models.Correo", b =>
                {
                    b.Property<int>("idCorreo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idCorreo"));

                    b.Property<string>("DireccionCorreo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PersonaID")
                        .HasColumnType("int");

                    b.HasKey("idCorreo");

                    b.ToTable("Correos", (string)null);
                });

            modelBuilder.Entity("GestionContableYugen.Models.Cuenta", b =>
                {
                    b.Property<int>("CuentaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CuentaID"));

                    b.Property<string>("CodigoCuenta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoCuenta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CuentaID");

                    b.ToTable("Cuentas", (string)null);
                });

            modelBuilder.Entity("GestionContableYugen.Models.CuentaPorCobrar", b =>
                {
                    b.Property<int>("CuentaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CuentaID"));

                    b.Property<int>("ClienteID")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaVencimiento")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("CuentaID");

                    b.HasIndex("ClienteID");

                    b.ToTable("CuentasPorCobrar", (string)null);
                });

            modelBuilder.Entity("GestionContableYugen.Models.CuentaPorPagar", b =>
                {
                    b.Property<int>("CuentaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CuentaID"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaVencimiento")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProveedorID")
                        .HasColumnType("int");

                    b.HasKey("CuentaID");

                    b.HasIndex("ProveedorID");

                    b.ToTable("CuentasPorPagar", (string)null);
                });

            modelBuilder.Entity("GestionContableYugen.Models.Descuento", b =>
                {
                    b.Property<int>("idDescuento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idDescuento"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Porcentaje")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("idDescuento");

                    b.ToTable("Descuentos", (string)null);
                });

            modelBuilder.Entity("GestionContableYugen.Models.DetalleFactura", b =>
                {
                    b.Property<int>("DetalleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DetalleID"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("FacturaID")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductoID")
                        .HasColumnType("int");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("DetalleID");

                    b.HasIndex("FacturaID");

                    b.HasIndex("ProductoID");

                    b.ToTable("DetallesFactura", (string)null);
                });

            modelBuilder.Entity("GestionContableYugen.Models.Distrito", b =>
                {
                    b.Property<int>("idDistrito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idDistrito"));

                    b.Property<int>("CantonidCanton")
                        .HasColumnType("int");

                    b.Property<string>("NombreDistrito")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idCanton")
                        .HasColumnType("int");

                    b.HasKey("idDistrito");

                    b.HasIndex("CantonidCanton");

                    b.ToTable("Distritos", (string)null);
                });

            modelBuilder.Entity("GestionContableYugen.Models.Factura", b =>
                {
                    b.Property<int>("FacturaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FacturaID"));

                    b.Property<int>("ClienteID")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaFactura")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Impuesto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TipoFacturaidTipoFactura")
                        .HasColumnType("int");

                    b.Property<int>("TipoPagoidTipoPago")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.Property<int>("idTipoFactura")
                        .HasColumnType("int");

                    b.Property<int>("idTipoPago")
                        .HasColumnType("int");

                    b.HasKey("FacturaID");

                    b.HasIndex("ClienteID");

                    b.HasIndex("TipoFacturaidTipoFactura");

                    b.HasIndex("TipoPagoidTipoPago");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Facturas", (string)null);
                });

            modelBuilder.Entity("GestionContableYugen.Models.Impuesto", b =>
                {
                    b.Property<int>("idImpuesto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idImpuesto"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Porcentaje")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("idImpuesto");

                    b.ToTable("Impuestos", (string)null);
                });

            modelBuilder.Entity("GestionContableYugen.Models.LibroDiario", b =>
                {
                    b.Property<int>("idLibroDiario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idLibroDiario"));

                    b.Property<int>("AsientoContableID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.HasKey("idLibroDiario");

                    b.HasIndex("AsientoContableID");

                    b.ToTable("LibrosDiario", (string)null);
                });

            modelBuilder.Entity("GestionContableYugen.Models.LibroMayor", b =>
                {
                    b.Property<int>("idLibroMayor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idLibroMayor"));

                    b.Property<DateTime>("FechaCorte")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalDebe")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalHaber")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("idLibroMayor");

                    b.ToTable("LibrosMayor", (string)null);
                });

            modelBuilder.Entity("GestionContableYugen.Models.Producto", b =>
                {
                    b.Property<int>("ProductoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductoID"));

                    b.Property<int>("CantidadDisponible")
                        .HasColumnType("int");

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoBarras")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreProducto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductoID");

                    b.ToTable("Productos", (string)null);
                });

            modelBuilder.Entity("GestionContableYugen.Models.Proveedor", b =>
                {
                    b.Property<int>("ProveedorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProveedorID"));

                    b.Property<string>("CorreoElectronico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreProveedor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProveedorID");

                    b.ToTable("Proveedores", (string)null);
                });

            modelBuilder.Entity("GestionContableYugen.Models.Provincia", b =>
                {
                    b.Property<int>("idProvincia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idProvincia"));

                    b.Property<string>("NombreProvincia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idProvincia");

                    b.ToTable("Provincias", (string)null);
                });

            modelBuilder.Entity("GestionContableYugen.Models.Rol", b =>
                {
                    b.Property<int>("RolID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RolID"));

                    b.Property<string>("NombreRol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RolID");

                    b.ToTable("Roles", (string)null);
                });

            modelBuilder.Entity("GestionContableYugen.Models.Telefono", b =>
                {
                    b.Property<int>("idTelefono")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idTelefono"));

                    b.Property<string>("NumeroTelefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PersonaID")
                        .HasColumnType("int");

                    b.Property<string>("TipoTelefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idTelefono");

                    b.ToTable("Telefonos", (string)null);
                });

            modelBuilder.Entity("GestionContableYugen.Models.TipoCorreo", b =>
                {
                    b.Property<int>("idTipoCorreo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idTipoCorreo"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idTipoCorreo");

                    b.ToTable("TiposCorreo", (string)null);
                });

            modelBuilder.Entity("GestionContableYugen.Models.TipoFactura", b =>
                {
                    b.Property<int>("idTipoFactura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idTipoFactura"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idTipoFactura");

                    b.ToTable("TiposFactura", (string)null);
                });

            modelBuilder.Entity("GestionContableYugen.Models.TipoPago", b =>
                {
                    b.Property<int>("idTipoPago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idTipoPago"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idTipoPago");

                    b.ToTable("TiposPago", (string)null);
                });

            modelBuilder.Entity("GestionContableYugen.Models.TipoTelefono", b =>
                {
                    b.Property<int>("idTipoTelefono")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idTipoTelefono"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idTipoTelefono");

                    b.ToTable("TiposTelefono", (string)null);
                });

            modelBuilder.Entity("GestionContableYugen.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioID"));

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RolID")
                        .HasColumnType("int");

                    b.HasKey("UsuarioID");

                    b.HasIndex("RolID");

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("AsientoContable", b =>
                {
                    b.HasOne("GestionContableYugen.Models.Cuenta", "Cuenta")
                        .WithMany()
                        .HasForeignKey("CuentaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cuenta");
                });

            modelBuilder.Entity("Cliente", b =>
                {
                    b.HasOne("GestionContableYugen.Models.Distrito", "Distrito")
                        .WithMany()
                        .HasForeignKey("idDistrito")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Distrito");
                });

            modelBuilder.Entity("GestionContableYugen.Models.CajaChica", b =>
                {
                    b.HasOne("GestionContableYugen.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("GestionContableYugen.Models.Canton", b =>
                {
                    b.HasOne("GestionContableYugen.Models.Provincia", "Provincia")
                        .WithMany()
                        .HasForeignKey("ProvinciaidProvincia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provincia");
                });

            modelBuilder.Entity("GestionContableYugen.Models.CierreCaja", b =>
                {
                    b.HasOne("GestionContableYugen.Models.CajaChica", "CajaChica")
                        .WithMany()
                        .HasForeignKey("CajaChicaMovimientoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CajaChica");
                });

            modelBuilder.Entity("GestionContableYugen.Models.CuentaPorCobrar", b =>
                {
                    b.HasOne("Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("GestionContableYugen.Models.CuentaPorPagar", b =>
                {
                    b.HasOne("GestionContableYugen.Models.Proveedor", "Proveedor")
                        .WithMany()
                        .HasForeignKey("ProveedorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("GestionContableYugen.Models.DetalleFactura", b =>
                {
                    b.HasOne("GestionContableYugen.Models.Factura", "Factura")
                        .WithMany()
                        .HasForeignKey("FacturaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionContableYugen.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Factura");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("GestionContableYugen.Models.Distrito", b =>
                {
                    b.HasOne("GestionContableYugen.Models.Canton", "Canton")
                        .WithMany()
                        .HasForeignKey("CantonidCanton")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Canton");
                });

            modelBuilder.Entity("GestionContableYugen.Models.Factura", b =>
                {
                    b.HasOne("Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionContableYugen.Models.TipoFactura", "TipoFactura")
                        .WithMany()
                        .HasForeignKey("TipoFacturaidTipoFactura")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionContableYugen.Models.TipoPago", "TipoPago")
                        .WithMany()
                        .HasForeignKey("TipoPagoidTipoPago")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionContableYugen.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("TipoFactura");

                    b.Navigation("TipoPago");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("GestionContableYugen.Models.LibroDiario", b =>
                {
                    b.HasOne("AsientoContable", "AsientoContable")
                        .WithMany()
                        .HasForeignKey("AsientoContableID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AsientoContable");
                });

            modelBuilder.Entity("GestionContableYugen.Models.Usuario", b =>
                {
                    b.HasOne("GestionContableYugen.Models.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("RolID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });
#pragma warning restore 612, 618
        }
    }
}
